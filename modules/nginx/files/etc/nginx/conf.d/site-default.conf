# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts


server {
	listen   8091 default rcvbuf=64K backlog=128;

   # this is key!@!
   server_name_in_redirect off;
   port_in_redirect off;

	access_log  /var/log/nginx/localhost.access.log;
   root   /var/www;

   if ( $server_name ~ "_"){
      return 444;
   }
   #rewrite ^(.*[^/])$ $1/ break;

	location / {
		index  index.html index.htm;
	}

   location /packages {
      autoindex on;
   }
   location /s/tipping {
      autoindex on;
   }
   location /k {
      autoindex on;
   }
   location /v {
      autoindex on;
   }
	location /sec {
      root /var/;
		autoindex on;
#      allow 127.0.0.1;
		deny all;
	}
   location /favicon.ico {
      empty_gif;
   }
   location ~ ^/cgi/([^/]*)(/.*)? {
      gzip off;

      #if ( $document_uri ~ munin-cgi-graph/(.*)$ ){
         set $path_info $2;
         set $script_name $1;
      #}
      fastcgi_index index.cgi;
      fastcgi_pass  unix:/tmp/dispatch.sock;
      #fastcgi_param SCRIPT_FILENAME /var/www$fastcgi_script_name;
      fastcgi_param SCRIPT_FILENAME /var/www/cgi/$script_name;
      fastcgi_param SCRIPT_NAME $script_name;
      fastcgi_param PATH_INFO $path_info;
   }



	#location /doc {
	#	root   /usr/share;
	#	autoindex on;
	#	deny all;
	#}

	#location /images {
	#	root   /usr/share;
	#	autoindex on;
	#}

   # Our very own 404
	error_page  404  /404.html;
	error_page  400 401 403 405  /40x.html;

   # Don't want this, varnish handles errors.
	# redirect server error pages to the static page /50x.html
	#
	#error_page   500 502 503 504  /50x.html;
	#location = /50x.html {
	#	root   /var/www/nginx-default;
	#}

	# proxy the PHP scripts to Apache listening on 127.0.0.1:80
	#
	#location ~ \.php$ {
		#proxy_pass   http://127.0.0.1;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
		#fastcgi_pass   127.0.0.1:9000;
		#fastcgi_index  index.php;
		#fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#includefastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
		#deny  all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#listen   8000;
#listen   somename:8080;
#server_name  somename  alias  another.alias;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}


# HTTPS server
#
#server {
#listen   443;
#server_name  localhost;

#ssl  on;
#ssl_certificate  cert.pem;
#ssl_certificate_key  cert.key;

#ssl_session_timeout  5m;

#ssl_protocols  SSLv2 SSLv3 TLSv1;
#ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
#ssl_prefer_server_ciphers   on;

#location / {
#root   html;
#index  index.html index.htm;
#}
#}
