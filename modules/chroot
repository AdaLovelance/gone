#!/bin/sh
# chroot $task $dir 
# Build a chroot for $task in $dir
#
# comotion@krutt.org

# numeric
TASK=${1:-build}
TARGETDIR=${2:-/var/lib/chroot/${TASK}}
#CHROOTUSER=${CHROOTUSER:-$TASK}
CHROOTUID=${CHROOTUID:-616}
CHROOTDIR=${CHROOTDIR:-$TARGETDIR}
CHROOTDIST=${CHROOTDIST:-squeeze}
MIRROR=${MIRROR:-http://ftp.no.debian.org/debian}
ARCH=${ARCH:-i386}
conf=/etc/schroot/schroot.conf

#if [ -d $CHROOTDIR && ]
if grep -q "\\[$TASK\\]" $conf
   then
   echo "$CHROOTDIR already exists, not strapping" >&2
else 
   mkdir -p $CHROOTDIR

   apt-get install debootstrap --yes
   debootstrap --arch=$ARCH $CHROOTDIST $CHROOTDIR $MIRROR >/dev/null
fi
if ! grep -q "\\[$TASK\\]" $conf
   then
   echo "configure schroot for $TASK"
   cat >> $conf << EOF
[$TASK]
type=directory
directory=$CHROOTDIR
groups=src,disk
root-groups=root

EOF
else
   echo "schroot already configured."
fi


if [ -z "$CHROOTUSER" ]
then
   echo "set CHROOTUSER for uid/bindmount chroot" >&2
   return 1
fi
    
chmod 700 `dirname $CHROOTDIR`
# create chroot account (optional)
groupadd -g $CHROOTUID $CHROOTUSER
useradd -g $CHROOTUID -u $CHROOTUID $CHROOTUSER
if [ ! -d /home/$CHROOTUSER ]
then
    cp -a /etc/skel /home/$CHROOTUSER
    chown -R $CHROOTUID:$CHROOTUID /home/$CHROOTUSER
fi

# create chroot
mkdir -p $CHROOTDIR/home/$CHROOTUSER
bindcmd="mount -o bind /home/$CHROOTUSER $CHROOTDIR/home/$CHROOTUSER"
echo $bindcmd >> /etc/rc.local
$bindcmd

# add shell access to chroot
cat >> /etc/ssh/sshd_config << EOF
Match User $CHROOTUSER
   ChrootDirectory $CHROOTDIR
   AllowTCPForwarding no
   X11Forwarding no

EOF


