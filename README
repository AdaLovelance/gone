=============================
gone configuration management
=============================
basic idea: 
 - rsync + shell scripts + git. 
... and I didn't even need rsync!

Puppet exists. Chef exists. CFEngine exists. Slaughter exists.
However:
I want to depend on nothing but git. 
I want to decentralise the "master".
I want my scripts to be standalone.

introducing the gone system:
 bash script with case $HOSTNAME and *) do defaults
 # apply default conf to all services
 git clone git://github.com/comotion/gone.git; cd gone; ./apply
 
 " client pull + server push "
 decentralised: any node is a conf node
 server may push: set up a git pull ; ./apply cron job
 master node := temporary central git repo
 apply runs defaults + host specifics

advantages: decentralized, requires git only (no client, no server)
 # store documents in private repo
 # store code in (semipublic) repo group
 # store conf in public repo

# hook reload actions on push events with diffs!

QUICK START
===========

git clone git://github.com:comotion/gone.git
cd gone
./apply          # apply the configuration on this host.

Now you can use your cloned repo as a master for other repos via git + ssh.

TODO / TO THINK ABOUT
=====================

Idempotence. "do $foo only when $bar got updated"
libs for:
    package installation on any distro
    service initscript installation
    checking configuration
.. might make it easier to write scripts, but
scripts will no longer stand alone!
