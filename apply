#!/bin/sh -x
# yes the shell
# 2010-08-31 Kacper Wysocki <comotion@krutt.org> Initial version
# 
# bottom up is better than top down
# 
# git clone repo/gone ; cd gone; ./apply

# let defaults be default: fall back to logic
fqdn=`hostname -f`
host=`hostname`

# comment the methods out to disable integrity checking
check_methods='sha512sum sha384sum sha256sum sha1sum md5sum'
check_filename=manifest

# hostname, $fqdn or other specifics are kept in branches
git checkout $host 2>/dev/null
git checkout $fqdn 2>/dev/null

git branch
# weakness: one machine may have many roles, not in this scheme though
# edit: keep separate repos for each role...
# or keep the same files and figure out a way to do multiple inheritance

# do integrity check of all available methods.
# normally you'd only be using one method, the safest one you can afford
# contrived to allow you to decide which one(s) when generating the manifest(s)
integrity_check () {
   passed=
   if [ -z "`which gpg`" ]
   then
      echo "gpg not available, can't guarantee integrity"
      exit 4
   fi
   for method in $check_methods
   do
      file=$check_filename.$method
      if [ -f $file.gpg ]
      then
         
         [ -f $file ] && mv $file $file.old
         gpg --output $file -d $file.gpg || exit 7
         if [ -z "`which $method`" ]
         then
            echo $method not available
            continue
         fi
            
         if $method -c $file
         then
            passed="$method $passed"
         else
	    echo "Integrity check $method failed!"
	    exit 2
         fi
      fi
   done
   if [ -z "$passed" ]
   then
      echo "Integrity not available."
      exit 3
   fi
   
}
   

if [ "$1" = "check" ]
then
   integrity_check
fi

# substitute installed copies for version controlled ones
workdir=$PWD
cd files/
#â™¯ why the hello not rsync?: b/c diff!
for file in `find . -type f | sed 's/^.\///'`
do
   echo $file
   stat $file # should diff permissions too
	if ! diff -bud /$file $file || [ $? = 2 ]
	then
		echo "$file doesn't match local copy, [a]pply, commit or SKIP?"
		read choose
		case $choose in
			[aA])
			cp -av $file /$file
			;;

			commit)
			cp -av /$file $file
			git diff $file
			git add $file
			git commit
			;;
			
			*)
            # skip
		esac
	fi
done
cd $workdir

# kick the script - basically what chef, slaughter and puppet does
. $workdir/defaults
# dash doesn't like it when we source relative scripts :-(

